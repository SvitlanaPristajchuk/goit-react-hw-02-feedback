{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx\";\nimport React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleBtnClick = key => {\n      this.setState(prevState => {\n        return {\n          [key]: prevState[key] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      const {\n        good,\n        neutral,\n        bad\n      } = this.state;\n      return good + bad + neutral;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      let totalFeedback = this.countTotalFeedback();\n      const {\n        good\n      } = this.state;\n      return totalFeedback ? Math.round(good / totalFeedback * 100) : 0;\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state; //const statistic = this.handleBtnClick();\n\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: Object.keys(this.state),\n        onLeaveFeedback: this.handleBtnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: totalFeedback,\n        positivePercentage: positivFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number\n};\nexport default App;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/goit-react-hw-02-feedback/src/App.jsx"],"names":["React","Component","Statistics","PropTypes","FeedbackOptions","Section","App","state","good","neutral","bad","handleBtnClick","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","render","positivFeedback","Object","keys","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;;AAMC,MAAMC,GAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,OAAO,EAAE,CAFF;AAGPC,MAAAA,GAAG,EAAE;AAHE,KADoB;;AAAA,SAO5BC,cAP4B,GAOXC,GAAG,IAAI;AACxB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AAC1B,eAAO;AAAC,WAACF,GAAD,GAAME,SAAS,CAACF,GAAD,CAAT,GAAe;AAAtB,SAAP;AACE,OAFH;AAGC,KAX2B;;AAAA,SAY5BG,kBAZ4B,GAYP,MAAM;AACzB,YAAM;AAAEP,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA;AAAjB,UAAyB,KAAKH,KAApC;AACA,aAAOC,IAAI,GAAGE,GAAP,GAAaD,OAApB;AACD,KAf2B;;AAAA,SAiB5BO,+BAjB4B,GAiBM,MAAM;AACpC,UAAIC,aAAa,GAAG,KAAKF,kBAAL,EAApB;AACA,YAAM;AAAEP,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,aAAOU,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAYX,IAAI,GAAGS,aAAR,GAAyB,GAApC,CAAH,GAA8C,CAAlE;AACD,KArByB;AAAA;;AAwB3BG,EAAAA,MAAM,GAAI;AACT,UAAM;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC,CADS,CAET;;AACA,UAAMU,aAAa,GAAG,KAAKF,kBAAL,EAAtB;AACA,UAAMM,eAAe,GAAG,KAAKL,+BAAL,EAAxB;AACA,wBACE;AAAA,8BACA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,eAAD;AACD,QAAA,OAAO,EAAEM,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,CADR;AAED,QAAA,eAAe,EAAE,KAAKI;AAFrB;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cALA,eAMA,QAAC,UAAD;AACM,QAAA,IAAI,EAAEH,IADZ;AAEM,QAAA,OAAO,EAAEC,OAFf;AAGM,QAAA,GAAG,EAAEC,GAHX;AAIM,QAAA,KAAK,EAAEO,aAJb;AAKM,QAAA,kBAAkB,EAAGI;AAL3B;AAAA;AAAA;AAAA;AAAA,cANA;AAAA,oBADF;AAgBF;;AA7C4B;;AA+C7BnB,UAAU,CAACsB,SAAX,GAAuB;AACtBhB,EAAAA,IAAI,EAAEL,SAAS,CAACsB,MADM;AAEtBhB,EAAAA,OAAO,EAAEN,SAAS,CAACsB,MAFG;AAGtBf,EAAAA,GAAG,EAAEP,SAAS,CAACsB;AAHO,CAAvB;AAMD,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Statistics from './components/Statistics/Statistics';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\n\n\n\n\n\n class App  extends Component {\n  state = {\n   good: 0,\n   neutral: 0,\n   bad: 0\n  }\n \n  handleBtnClick = key => {\n  this.setState(prevState => {\n   return {[key]:prevState[key]+1};\n    });\n  }\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n      let totalFeedback = this.countTotalFeedback();\n      const { good } = this.state;\n      return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n    };\n  \n\n   render () {\n    const { good, neutral, bad } = this.state;\n    //const statistic = this.handleBtnClick();\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n      <Section title=\"Please leave feedback\"/>\n      <FeedbackOptions \n     options={Object.keys(this.state)} \n     onLeaveFeedback={this.handleBtnClick} />\n      <Section title=\"Statistics\"/>\n      <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage= {positivFeedback}\n          /> \n    </>\n    ) \n }\n }\n Statistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n \n };\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
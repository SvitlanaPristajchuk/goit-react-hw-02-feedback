{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","s","box","options","FeedbackOptions","onLeaveFeedback","map","option","type","btn","onClick","charAt","toUpperCase","substring","Section","children","title","App","state","handleBtnClick","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","positivFeedback","Object","keys","Component","propTypes","PropTypes","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,yB,uCCA1BD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,6B,+ICehDC,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCiCCC,EAhCE,SAAC,GAAD,IACfC,EADe,EACfA,KACAC,EAFe,EAEfA,QACCC,EAHc,EAGdA,IACAC,EAJc,EAIdA,MACAC,EALc,EAKdA,mBALc,OAOlB,mCACGD,EACC,qBAAIE,UAAWC,IAAEC,IAAjB,UACE,qBAAIF,UAAWC,IAAEE,QAAjB,mBAAiCR,EAAjC,OACA,qBAAIK,UAAWC,IAAEE,QAAjB,sBAAoCP,EAApC,OACA,qBAAII,UAAWC,IAAEE,QAAjB,kBAAgCN,EAAhC,OACA,qBAAIG,UAAWC,IAAEE,QAAjB,oBAAkCL,EAAlC,OACA,qBAAIE,UAAWC,IAAEE,QAAjB,gCACsBJ,EADtB,UAKD,cAAC,EAAD,CAAcN,QAAQ,yB,gCCEbW,MAtBf,YAAuD,IAA5BD,EAA2B,EAA3BA,QAASE,EAAkB,EAAlBA,gBACpC,OACI,qBAAKL,UAAWC,IAAEC,IAAlB,SACKC,EAAQG,KAAI,SAAAC,GAAM,OACf,wBACAC,KAAK,SAEPR,UAAWC,IAAEQ,IACbC,QAAS,kBAAML,EAAgBE,IAJ7B,SAMDA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,UAAU,IAJ5CN,S,iBCWFO,EAhBC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAExB,OACM,qBAAIhB,UAAWC,IAAEe,MAAjB,UACGA,EACAD,MCANE,E,4MACLC,MAAQ,CACPvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNsB,eAAiB,SAAAC,GACjB,EAAKC,UAAS,SAAAC,GACb,OAAO,eAAEF,EAAKE,EAAUF,GAAK,O,EAG9BG,mBAAqB,WACnB,MAA+B,EAAKL,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,OAAOD,EADP,EAAuBE,IACHD,G,EAGtB4B,gCAAkC,WAC9B,IAAIC,EAAgB,EAAKF,qBACjB5B,EAAS,EAAKuB,MAAdvB,KACR,OAAO8B,EAAgBC,KAAKC,MAAOhC,EAAO8B,EAAiB,KAAO,G,4CAIrE,WACC,MAA+BG,KAAKV,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB4B,EAAgBG,KAAKL,qBACrBM,EAAkBD,KAAKJ,kCAC7B,OACE,qCACA,cAAC,EAAD,CAASR,MAAM,0BACf,cAAC,EAAD,CACDb,QAAS2B,OAAOC,KAAKH,KAAKV,OAC1Bb,gBAAiBuB,KAAKT,iBACrB,cAAC,EAAD,CAASH,MAAM,eACf,cAAC,EAAD,CACMrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,EACP1B,mBAAqB8B,W,GAxCbG,aA8CnBtC,EAAWuC,UAAY,CACtBtC,KAAMuC,IAAUC,OAChBvC,QAASsC,IAAUC,OACnBtC,IAAKqC,IAAUC,QAGFlB,QCxDfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BlD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,IAAM,gC","file":"static/js/main.11d39092.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Statistics_options__1gMcy\",\"button\":\"Statistics_button__Amu__\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n \n const  Notification = ({ message }) => {\n    return <h2>{message}</h2>;\n  }\n\n\n\n\n\n  \n  Notification.propTypes = {\n    message: PropTypes.string,\n  };\n\n  export default Notification;","import React from 'react';\nimport s from './Statistics.module.css';\nimport Notification from '../Notification/Notification';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({\n    good,\n    neutral,\n     bad, \n     total, \n     positivePercentage,\n   }) => (\n <>\n  { total ? (\n     <ul className={s.box}>\n       <li className={s.options}> Good:{good} </li>\n       <li className={s.options}> Neutral:{neutral} </li>\n       <li className={s.options}> Bad:{bad} </li>\n       <li className={s.options}> Total:{total} </li>\n       <li className={s.options}>\n         Positive feedback: {positivePercentage}%\n       </li>\n     </ul>\n     ) : (\n      <Notification message=\"No feedback given\" />\n     )\n     }\n </>\n);\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n   bad: PropTypes.number,\n   total: PropTypes.number,\n };\n\n\n  export default Statistics;\n\n\n"," import React from 'react';\nimport s from './FeedbackOptions.module.css'; \nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions ({options, onLeaveFeedback}) {\nreturn (\n    <div className={s.box}>\n        {options.map(option =>(\n            <button\n            type=\"button\"\n            key={option} \n          className={s.btn}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option.charAt(0).toUpperCase() + option.substring(1)}\n            </button>\n        ))}\n    </div>\n)\n        }\n     \nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n  \nexport default FeedbackOptions","import React from 'react';\nimport s from './Section.module.css'; \nimport PropTypes from 'prop-types';\n\n\nconst Section = ({children, title}) => {\n\n    return(\n          <h1 className={s.title}>\n            {title}\n            {children}\n            </h1>\n    )\n    };\n\n;\nSection.propTypes = {\n title: PropTypes.string.isRequired,\n};\n\n\nexport default Section;","import React, { Component } from 'react'\nimport Statistics from './components/Statistics/Statistics';\nimport PropTypes from 'prop-types';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\n\n\n\n\n\n class App  extends Component {\n  state = {\n   good: 0,\n   neutral: 0,\n   bad: 0\n  }\n \n  handleBtnClick = key => {\n  this.setState(prevState => {\n   return {[key]:prevState[key]+1};\n    });\n  }\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n      let totalFeedback = this.countTotalFeedback();\n      const { good } = this.state;\n      return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n    };\n  \n\n   render () {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n      <Section title=\"Please leave feedback\"/>\n      <FeedbackOptions \n     options={Object.keys(this.state)} \n     onLeaveFeedback={this.handleBtnClick} />\n      <Section title=\"Statistics\"/>\n      <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage= {positivFeedback}\n          /> \n    </>\n    ) \n }\n }\n Statistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n \n };\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"FeedbackOptions_box__2GXn4\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}